*filter
:INPUT ACCEPT
:FORWARD DROP
:OUTPUT ACCEPT

# データを持たないパケットの接続を破棄
-A INPUT -p tcp --tcp-flags ALL NONE -j DROP
# SYNflood攻撃と思われる接続を破棄
-A INPUT -p tcp ! --syn -m state --state NEW -j DROP
# ステルススキャンと思われる接続を破棄
-A INPUT -p tcp --tcp-flags ALL ALL -j DROP

# 自ホストからのアクセスを許可
-A INPUT -i lo -j ACCEPT
# pingによる確認を拒否
-A INPUT -p icmp -j DROP

# 全ホスト(ブロードキャストアドレス、マルチキャストアドレス)宛パケットはログを記録せずに破棄
-A INPUT -d 255.255.255.255 -j DROP
-A INPUT -d 224.0.0.1 -j DROP

# ESTABLISHEDもしくはRELATEDであれば通信を許可
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# 利用するサービスの接続許可
# http(s)
-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 443 -j ACCEPT
# ssh
-A INPUT -m state --state NEW -m tcp -p tcp --dport <%= node.default.dev_tools.ssh_port %> -j ACCEPT

# SSHのブルートフォースアタック対策
-A INPUT -p tcp --dport <%= node.default.dev_tools.ssh_port %> -m state --state NEW -m recent --set --name SSH
-A INPUT -p tcp --dport <%= node.default.dev_tools.ssh_port %> -m state --state NEW -m recent --update --seconds 60 --hitcount 8 --rttl --name SSH -j DROP

# 上記のルールにマッチしなかったアクセスはログを記録して破棄
-A INPUT -m limit --limit 1/s -j LOG --log-prefix "[IPTABLES INPUT]: "
-A INPUT -j DROP
-A FORWARD -m limit --limit 1/s -j LOG --log-prefix "[IPTABLES FORWARD]: "
-A FORWARD -j DROP

COMMIT
